Week 4 DDP Final Project
========================================================
author: O. Paz
date: January 10th, 2021
autosize: true


========================================================

This presentation is meant to fulfill the final project for the "Developing Data Products" course by Coursera. I will present two interactive graphics with simple show/no show options for comparison purposes. The intention is to show the difference between two sampling examples:

- The first graph comes from independent random values, using R function "rnorm" with default values (mean zero and standard deviation 1).
- The second graph is fed with the the same range of numbers, but not necessarily independent (out of a pool of 1,000 numbers). 


========================================================

The experience goes to show that, regardless of the number of variables used, the Central Limit Theorem dictates that such values must be random and independent so that their distribution resembles the Gaussian curve (the famous bell shape), *for the first graph and not so much so for the second*.

The blue curve in the first graph stresses this bell shape for any increment or decrease of the number of values which can be selected from the sliding panel. Going from lesser to greater amount will show the effect of the number of samples as well.

The Code (reduced in size to fit one slide)
========================================================

 <font size="3">library(shiny);library(ggplot2)  
**UI:**
 shinyUI(fluidPage(
 titlePanel("Center Limit Theory"),
 sidebarLayout(
 sidebarPanel(
 sliderInput("sliderX", "Pick an X Value",1,1000,500),
 checkboxInput("showHist1", "Show/Hide Random Histogram Graph", value = TRUE),
 checkboxInput("showHist2", "Show/Hide non-random Histogram Graph", value = TRUE)
 ),
 mainPanel(
 h3("Histogram Graph"),
 plotOutput("plot1"),
 h3("Histogram Graph"),
 plotOutput("plot2")
 )
 )
 ))  
 **Server:**
 shinyServer(function(input, output) {
 output$plot1 <- renderPlot({
 set.seed(1984)
 if(input$showHist1){
 dataX <- rnorm(input$sliderX)
 dataX=as.data.frame(dataX)
 g <- ggplot(dataX,aes(dataX))+
 geom_histogram(aes(y = ..density..),fill="lightblue")+
 stat_function(fun = dnorm, colour = "blue", lwd=1.5)
 xlab("X")
 g
 }
 })
 output$plot2 <- renderPlot({
 set.seed(1984)
 if(input$showHist2){
 dataX <- sample(1:1000,input$sliderX,replace = T)
 hist(dataX, main = "", xlab ="X", col = "red")
 }
 })
 })</font> 

========================================================

To see the application in action please click in the following link:

[Central Limit Tester]("http://oswaldopaz.shinyapps.io/firstapp/")

Bibliography:

- "Statistical Inference for Data Science" by Brian Caffo (2016, Leanpub).
- "Developing Data Products in R" by Brian Caffo (2015, Leanpub).



